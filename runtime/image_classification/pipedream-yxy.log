0
weights_shape:  {0: [[64, 3, 3, 3], [64], [64, 64, 3, 3], [64], [1]], 1: [], 2: [], 3: []}
1
weights_shape:  {0: [[64, 3, 3, 3], [64], [64, 64, 3, 3], [64], [1]], 1: [], 2: [], 3: []}
3
weights_shape:  {0: [[64, 3, 3, 3], [64], [64, 64, 3, 3], [64], [1]], 1: [], 2: [], 3: []}
2
weights_shape:  {0: [[64, 3, 3, 3], [64], [64, 64, 3, 3], [64], [1]], 1: [], 2: [], 3: []}
0
self.swap_send_ranks:  {'swap_tensor': [3]}
self.swap_recv_ranks:  {'swap_tensor': []}
self.send_ranks:  {'out0': [1], 'target': [1]}
0
self.num_versions:  4
1
self.swap_send_ranks:  {'swap_tensor': []}
self.swap_recv_ranks:  {'swap_tensor': []}
self.send_ranks:  {'out1': [2], 'target': [2]}
1
self.num_versions:  3
1
num_iterations_for_forward_threads:  31250
num_iterations_for_backward_threads:  31250
2
self.swap_send_ranks:  {'swap_tensor': []}
self.swap_recv_ranks:  {'swap_tensor': []}
self.send_ranks:  {'out2': [3], 'target': [3]}
2
self.num_versions:  2
2
num_iterations_for_forward_threads:  31250
num_iterations_for_backward_threads:  31250
3
self.swap_send_ranks:  {'swap_tensor': []}
self.swap_recv_ranks:  {'swap_tensor': [0]}
self.send_ranks:  {}
3
self.num_versions:  1
3
num_iterations_for_forward_threads:  0
num_iterations_for_backward_threads:  31250
testrank:  3
test swap_recv_queues<threadsafe_queue.Queue object at 0x7f146061a630>
0
num_iterations_for_forward_threads:  40036
num_iterations_for_backward_threads:  0
0 finish forward 0
2 finish forward 0
1 finish forward 0
3 finish forward 0
3 finish backward 0
3 finish forward 1
2 finish backward 0
3 finish backward 1
2 finish forward 1
2 finish backward 1
1 finish backward 0
3 finish forward 2
3 finish backward 2
1 finish forward 1
1 finish backward 1
2 finish forward 2
0 finish backward 0
0 finish forward 1
send layer_name: layer2.weight
send layer_name: layer2.bias
send layer_name: layer4.weight
send layer_name: layer4.bias
2 finish backward 2
3 finish forward 3
3 finish backward 3
0 finish backward 1
0 finish forward 2
1 finish forward 2
1 finish backward 2
2 finish forward 3
2 finish backward 3
3 finish forward 4
3 finish backward 4
1 finish forward 3
1 finish backward 3
2 finish forward 4
0 finish backward 2
0 finish forward 3
2 finish backward 4
3 finish forward 5
3 finish backward 5
0 finish backward 3
0 finish forward 4
before recover  
1 finish forward 4
1 finish backward 4
after recover  
2 finish forward 5
get_recover_weights:  [tensor([[[[ 0.0512,  0.0518,  0.0093],
          [ 0.0219, -0.0504, -0.0279],
          [-0.0155, -0.0102,  0.0311]],

         [[-0.0384, -0.0118,  0.0776],
          [-0.0990, -0.0202, -0.0236],
          [-0.0970,  0.0744,  0.0896]],

         [[ 0.0003, -0.0283, -0.0135],
          [ 0.0283,  0.0507,  0.0057],
          [ 0.0409,  0.0024, -0.0132]]],


        [[[-0.0671, -0.0170, -0.0049],
          [-0.0807,  0.0286, -0.0633],
          [-0.0545,  0.0265,  0.0561]],

         [[-0.0678, -0.0251, -0.1021],
          [-0.0046,  0.0248, -0.0973],
          [-0.0280, -0.0639,  0.0907]],

         [[ 0.0048,  0.0296,  0.0329],
          [ 0.0302,  0.0504, -0.0222],
          [-0.0710,  0.0265, -0.0505]]],


        [[[ 0.0213,  0.0250, -0.1191],
          [-0.0678, -0.0586, -0.0303],
          [-0.0383, -0.0404, -0.1120]],

         [[ 0.0267,  0.0173,  0.0698],
          [-0.0049,  0.0626, -0.0643],
          [-0.0009, -0.0568, -0.0235]],

         [[-0.0591,  0.0317, -0.0439],
          [-0.0284, -0.0229, -0.0058],
          [ 0.0804,  0.0316,  0.0660]]],


        ...,


        [[[ 0.0251, -0.1556, -0.0533],
          [-0.0444,  0.0615,  0.0342],
          [ 0.0501,  0.0578,  0.0543]],

         [[-0.0275, -0.0924,  0.0596],
          [-0.0815,  0.0100,  0.0031],
          [ 0.0427, -0.0576,  0.0669]],

         [[-0.0918,  0.0037, -0.0453],
          [ 0.0205, -0.0047,  0.0009],
          [-0.0358, -0.0625,  0.1217]]],


        [[[-0.1244, -0.0581,  0.0131],
          [-0.0194,  0.0453, -0.0643],
          [ 0.0774, -0.0206,  0.0364]],

         [[ 0.0146, -0.0324, -0.0590],
          [ 0.0005,  0.0185,  0.0328],
          [ 0.0048, -0.1089, -0.0603]],

         [[-0.0512, -0.0512, -0.0216],
          [ 0.1034,  0.0729,  0.0570],
          [-0.0639, -0.0004, -0.0055]]],


        [[[-0.0169, -0.0032,  0.0290],
          [ 0.0604,  0.0462, -0.0627],
          [-0.0195,  0.0282,  0.0425]],

         [[-0.1066,  0.0528, -0.0119],
          [ 0.0907, -0.0106, -0.0639],
          [ 0.0313, -0.0727, -0.0231]],

         [[ 0.0509, -0.0261,  0.0244],
          [ 0.0005, -0.0455,  0.0829],
          [-0.0012,  0.0072, -0.0094]]]], device='cuda:0', requires_grad=True), tensor([ 2.5797e-06, -5.1131e-04,  6.2241e-04,  4.4488e-04, -2.6353e-04,
        -3.3759e-04,  3.2209e-04,  7.5472e-04,  1.0197e-03, -6.9260e-04,
        -8.3069e-04,  3.4614e-04,  8.9567e-04, -1.5081e-04, -9.7281e-05,
         3.8544e-04,  8.4798e-04,  8.3734e-04, -5.4058e-04,  1.9653e-05,
         7.2390e-04, -1.1886e-03, -2.2472e-04, -2.0373e-04, -4.3222e-04,
        -4.1993e-04,  2.1903e-04,  1.0139e-04, -1.5320e-04, -4.6007e-04,
         8.4755e-04,  6.8313e-04, -3.1603e-05, -1.6833e-04,  1.3190e-05,
        -4.6282e-05, -1.1797e-03, -6.9788e-04, -7.2142e-04, -4.0281e-05,
         1.4364e-04,  2.5605e-04,  1.0270e-04,  3.6404e-04,  9.1181e-04,
         2.4571e-04, -2.6878e-05, -2.1327e-04, -5.6894e-04,  2.4962e-04,
        -2.6474e-04, -1.6491e-04, -3.2566e-04, -6.7725e-04,  1.7078e-04,
        -8.9885e-04,  6.4674e-04,  5.0990e-04,  8.9713e-06, -7.2208e-04,
        -4.2864e-05, -2.7327e-04, -5.4530e-05,  1.1151e-03], device='cuda:0',
       requires_grad=True), tensor([[[[ 0.0479,  0.0363, -0.0727],
          [-0.0413,  0.0462,  0.0527],
          [-0.0029, -0.0122,  0.0301]],

         [[ 0.0554, -0.0150, -0.0101],
          [ 0.0194, -0.0189,  0.0122],
          [ 0.0629, -0.0737, -0.1132]],

         [[ 0.0649, -0.0515, -0.0527],
          [ 0.0441,  0.0642,  0.0538],
          [-0.0087,  0.0581,  0.0518]],

         ...,

         [[-0.1060,  0.0573,  0.0895],
          [-0.0109,  0.0552,  0.1166],
          [ 0.1049,  0.0633, -0.0375]],

         [[ 0.0159,  0.0052,  0.1133],
          [-0.0076,  0.0810, -0.0317],
          [ 0.0323,  0.0237, -0.0836]],

         [[-0.0254,  0.0411,  0.0349],
          [ 0.0757, -0.0128,  0.0632],
          [ 0.0322, -0.0783, -0.0876]]],


        [[[ 0.0045,  0.0217,  0.0272],
          [-0.0434,  0.0019, -0.1361],
          [-0.0376,  0.0236,  0.0651]],

         [[-0.0351, -0.0387, -0.0699],
          [ 0.0284,  0.0152,  0.0397],
          [ 0.0550, -0.0403, -0.0189]],

         [[ 0.0299,  0.0499,  0.0046],
          [-0.0003, -0.0755,  0.0211],
          [-0.0878, -0.0114, -0.0348]],

         ...,

         [[ 0.0450, -0.0605,  0.0432],
          [-0.0078, -0.0015,  0.0355],
          [-0.1037, -0.1056, -0.0383]],

         [[-0.0151, -0.1105,  0.0987],
          [-0.0494, -0.1226, -0.0314],
          [ 0.0753,  0.0003,  0.0716]],

         [[ 0.0162, -0.0498,  0.0648],
          [ 0.0123, -0.0201, -0.0195],
          [-0.0172,  0.0342,  0.0019]]],


        [[[ 0.0337,  0.0189,  0.0112],
          [ 0.0480, -0.0022, -0.0203],
          [ 0.0872,  0.0473, -0.0304]],

         [[ 0.0269, -0.0186,  0.0464],
          [-0.0383, -0.0144,  0.0732],
          [ 0.0495, -0.0095,  0.0930]],

         [[ 0.0264, -0.0719, -0.0752],
          [-0.0244,  0.0184,  0.0087],
          [-0.0790, -0.0869,  0.1320]],

         ...,

         [[ 0.0597, -0.0574, -0.1413],
          [-0.0608,  0.1479,  0.0242],
          [-0.1284,  0.1124, -0.0106]],

         [[ 0.0156,  0.0193,  0.0484],
          [-0.0286,  0.1203, -0.0723],
          [ 0.0893, -0.0680, -0.0122]],

         [[-0.0775, -0.0228, -0.0691],
          [ 0.0533,  0.0176,  0.0084],
          [-0.0105,  0.0705,  0.0264]]],


        ...,


        [[[ 0.0573,  0.0540, -0.0398],
          [ 0.0004, -0.0907, -0.0760],
          [ 0.0091, -0.0489, -0.0636]],

         [[ 0.0351, -0.0585,  0.0013],
          [ 0.0388,  0.0270,  0.0267],
          [-0.1615, -0.0720,  0.0155]],

         [[-0.0469, -0.0568, -0.0582],
          [ 0.0115, -0.0566,  0.0534],
          [-0.0935,  0.0074, -0.0123]],

         ...,

         [[ 0.0039,  0.0113,  0.0775],
          [ 0.0226,  0.1083, -0.0174],
          [-0.0143, -0.0631,  0.1131]],

         [[-0.1196,  0.0328, -0.0450],
          [-0.1670,  0.0151,  0.1106],
          [ 0.0050,  0.0063,  0.1195]],

         [[ 0.0776, -0.0110, -0.0115],
          [-0.0323,  0.0779,  0.0694],
          [ 0.0669,  0.0320,  0.0252]]],


        [[[ 0.0646, -0.0824, -0.0756],
          [-0.0351,  0.0387, -0.0856],
          [-0.1112, -0.0570, -0.0438]],

         [[ 0.0192, -0.0292,  0.0294],
          [ 0.0630, -0.0147, -0.0844],
          [-0.0257,  0.0152, -0.0124]],

         [[-0.0039,  0.0303,  0.0337],
          [-0.0226, -0.0765, -0.1551],
          [ 0.0767,  0.1685,  0.0527]],

         ...,

         [[-0.0209,  0.0051,  0.0127],
          [ 0.0011, -0.0293,  0.0392],
          [ 0.1112, -0.0855, -0.0511]],

         [[ 0.0338,  0.0302, -0.1639],
          [ 0.0115,  0.0501,  0.0343],
          [ 0.0780, -0.0257,  0.0312]],

         [[-0.0646, -0.0225,  0.0927],
          [-0.0082,  0.0208,  0.0673],
          [ 0.0835, -0.0358, -0.0109]]],


        [[[-0.0246, -0.1256,  0.0003],
          [ 0.0027, -0.1031,  0.0082],
          [-0.0571,  0.0055,  0.1096]],

         [[-0.0989,  0.0392, -0.0291],
          [-0.0911, -0.0133,  0.0505],
          [ 0.0091, -0.0344, -0.0425]],

         [[-0.0033, -0.1184,  0.0901],
          [-0.0932, -0.1054,  0.0028],
          [ 0.0359, -0.0724,  0.0354]],

         ...,

         [[-0.0314,  0.0190, -0.1346],
          [ 0.0284, -0.0142, -0.1012],
          [ 0.0882, -0.1678,  0.0470]],

         [[ 0.0025,  0.0524,  0.0369],
          [-0.0338, -0.0216, -0.0620],
          [ 0.0333,  0.0237, -0.0086]],

         [[-0.0060,  0.0618,  0.0495],
          [-0.0178,  0.0608,  0.0645],
          [-0.0309,  0.0406, -0.0233]]]], device='cuda:0', requires_grad=True), tensor([-4.7339e-05,  9.2120e-05,  1.0945e-04,  6.1290e-04,  3.7093e-06,
         7.4259e-05, -7.1595e-04,  3.2578e-06, -4.0875e-04, -6.7362e-04,
        -4.5759e-05,  3.6195e-04,  2.0065e-04, -1.5567e-04,  5.2739e-04,
         8.9334e-05, -4.3900e-05, -4.4880e-04, -2.5417e-05,  1.5613e-05,
        -1.8612e-04,  1.3603e-03, -1.2098e-03, -2.7417e-04,  7.8827e-04,
         2.5945e-04, -1.0203e-04,  5.4142e-04, -5.9801e-04,  3.9272e-04,
        -3.2758e-04, -1.9823e-04, -4.5411e-05, -7.4031e-05, -7.6474e-04,
        -9.2367e-05, -1.1856e-03,  2.4259e-04,  6.0462e-04, -7.1385e-04,
         2.0933e-05, -8.3202e-04,  5.1439e-04,  6.5824e-05,  1.6191e-04,
        -5.0559e-05, -6.2948e-04,  4.8274e-04, -2.7223e-04,  2.4168e-05,
        -2.1034e-04, -2.2081e-05,  9.4468e-04,  4.7111e-04,  1.7770e-04,
         1.7549e-04,  7.4137e-04, -8.9870e-05, -1.5383e-04, -2.2541e-04,
         2.7728e-04,  6.1186e-04, -5.6373e-04,  4.0199e-04], device='cuda:0',
       requires_grad=True), tensor([1.], device='cuda:0', requires_grad=True)]
2 finish backward 5
3 finish forward 6
3 finish backward 6
1 finish forward 5
0 finish backward 4
1 finish backward 5
0 finish forward 5
2 finish forward 6
2 finish backward 6
3 finish forward 7
3 finish backward 7
0 finish backward 5
0 finish forward 6
1 finish forward 6
1 finish backward 6
2 finish forward 7
2 finish backward 7
3 finish forward 8
3 finish backward 8
1 finish forward 7
1 finish backward 7
2 finish forward 8
0 finish backward 6
0 finish forward 7
2 finish backward 8
3 finish forward 9
3 finish backward 9
0 finish backward 7
0 finish forward 8
1 finish forward 8
1 finish backward 8
2 finish forward 9
2 finish backward 9
3 finish forward 10
3 finish backward 10
1 finish forward 9
1 finish backward 9
0 finish backward 8
0 finish forward 9
2 finish forward 10
2 finish backward 10
3 finish forward 11
3 finish backward 11
0 finish backward 9
0 finish forward 10
1 finish forward 10
1 finish backward 10
2 finish forward 11
2 finish backward 11
3 finish forward 12
3 finish backward 12
1 finish forward 11
1 finish backward 11
0 finish backward 10
0 finish forward 11
2 finish forward 12
2 finish backward 12
3 finish forward 13
3 finish backward 13
1 finish forward 12
1 finish backward 12
0 finish backward 11
0 finish forward 12
2 finish forward 13
2 finish backward 13
3 finish forward 14
3 finish backward 14
0 finish backward 12
0 finish forward 13
1 finish forward 13
1 finish backward 13
2 finish forward 14
2 finish backward 14
3 finish forward 15
3 finish backward 15
1 finish forward 14
1 finish backward 14
0 finish backward 13
0 finish forward 14
2 finish forward 15
2 finish backward 15
3 finish forward 16
3 finish backward 16
0 finish backward 14
0 finish forward 15
1 finish forward 15
